<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OrchardCore.Contents.Core</name>
    </assembly>
    <members>
        <member name="M:Microsoft.AspNetCore.Authorization.AuthorizationServiceExtensions.AuthorizeContentTypeDefinitionsAsync(Microsoft.AspNetCore.Authorization.IAuthorizationService,System.Security.Claims.ClaimsPrincipal,OrchardCore.Security.Permissions.Permission,System.Collections.Generic.IEnumerable{OrchardCore.ContentManagement.Metadata.Models.ContentTypeDefinition},OrchardCore.ContentManagement.IContentManager)">
            <summary>
            Evaluate if we have a specific owner variation permission to at least one content type.
            </summary>
        </member>
        <member name="T:OrchardCore.Contents.CommonPermissions">
            <summary>
            This class contains the source references to the OrchardCore.Contents module permissions so they can be used in other modules
            without having to reference the OrchardCore.Contents by itself.
            </summary>
        </member>
        <member name="F:OrchardCore.Contents.ContentsAdminListFilterOptions.DefaultTermName">
            <summary>
            The default term name to use if not defined for a given content type in the <see cref="F:OrchardCore.Contents.ContentsAdminListFilterOptions.DefaultTermNames"/>.
            </summary>
        </member>
        <member name="F:OrchardCore.Contents.ContentsAdminListFilterOptions.DefaultTermNames">
            <summary>
            This dictionary enables you to associate a content type or stereotype with a default term name.
            The dictionary's keys should encompass content types or stereotypes, the dictionary's values
            should indicate the default term names per content type to utilize during text searches.
            </summary>
        </member>
        <member name="P:OrchardCore.Contents.ContentsAdminListFilterOptions.UseExactMatch">
            <summary>
            Whether or not the entire text should be parsed as a single term, enabling an exact match search.
            This means that search engines will treat the text as a whole rather than individual words.
            </summary>
        </member>
        <member name="T:OrchardCore.Contents.Security.ContentTypePermissionsHelper">
            <summary>
            The content type permissions helper generates dynamic permissions per content type.
            </summary>
        </member>
        <member name="M:OrchardCore.Contents.Security.ContentTypePermissionsHelper.ConvertToDynamicPermission(OrchardCore.Security.Permissions.Permission)">
            <summary>
            Returns a dynamic permission for a content type, based on a global content permission template.
            </summary>
        </member>
        <member name="M:OrchardCore.Contents.Security.ContentTypePermissionsHelper.CreateDynamicPermission(OrchardCore.Security.Permissions.Permission,OrchardCore.ContentManagement.Metadata.Models.ContentTypeDefinition)">
            <summary>
            Generates a permission dynamically for a content type.
            </summary>
        </member>
        <member name="M:OrchardCore.Contents.Security.ContentTypePermissionsHelper.CreateDynamicPermission(OrchardCore.Security.Permissions.Permission,System.String)">
            <summary>
            Generates a permission dynamically for a content type, without a display name or category.
            </summary>
        </member>
        <member name="T:OrchardCore.Contents.Services.IContentsAdminListFilter">
            <summary>
            Provides custom filters to the content items admin listing.
            <see cref="T:OrchardCore.Contents.Services.IContentsAdminListFilterProvider"/> is the preferred way to extend the contents list.
            This abstraction remains to support backwards compatability, and alternate extension points.
            </summary>
        </member>
        <member name="T:OrchardCore.Contents.Services.IContentsAdminListFilterProvider">
            <summary>
            Provides a custom parsing engine rule set for filtering content items in the contents admin list.
            </summary>
        </member>
        <member name="M:OrchardCore.Settings.SiteServiceExtensions.GetCustomSettingsAsync(OrchardCore.Settings.ISiteService,System.String)">
            <summary>
            Gets an instance of the specified custom settings if it exists.
            </summary>
            <param name="siteService">The site service.</param>
            <param name="name">The entry name.</param>
            <returns>A <see cref="T:OrchardCore.ContentManagement.ContentItem" /> instance that matches the given name, if one exists.</returns>
        </member>
    </members>
</doc>
